<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="engine" targetName="engine" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" GENERATION_DIR="build/debug" CONFIG_NAME="Debug" GENERATION_OPTIONS="-DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake" />
      <configuration PROFILE_NAME="Release" ENABLED="true" GENERATION_DIR="build/release" CONFIG_NAME="Release" GENERATION_OPTIONS="-DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="35497021-a1db-4a24-ac6e-73fced32eb24" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/thirdparty/fa_solid_900.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/thirdparty/font_awesome_5.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/thirdparty/imcmd_command_palette.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/thirdparty/imcmd_command_palette.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/thirdparty/imcmd_fuzzy_search.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/thirdparty/imcmd_fuzzy_search.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/thirdparty/imfilebrowser.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/thirdparty/imgui_notify.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Import.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/Import.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/debug/.ninja_deps" beforeDir="false" afterPath="$PROJECT_DIR$/build/debug/.ninja_deps" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/debug/.ninja_log" beforeDir="false" afterPath="$PROJECT_DIR$/build/debug/.ninja_log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/debug/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/build/debug/CMakeCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/debug/CMakeFiles/3.25.2/CMakeDetermineCompilerABI_C.bin" beforeDir="false" afterPath="$PROJECT_DIR$/build/debug/CMakeFiles/3.25.2/CMakeDetermineCompilerABI_C.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/debug/CMakeFiles/3.25.2/CMakeDetermineCompilerABI_CXX.bin" beforeDir="false" afterPath="$PROJECT_DIR$/build/debug/CMakeFiles/3.25.2/CMakeDetermineCompilerABI_CXX.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/debug/CMakeFiles/3.25.2/CMakeSystem.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/build/debug/CMakeFiles/3.25.2/CMakeSystem.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/debug/CMakeFiles/CMakeOutput.log" beforeDir="false" afterPath="$PROJECT_DIR$/build/debug/CMakeFiles/CMakeOutput.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/debug/CMakeFiles/TargetDirectories.txt" beforeDir="false" afterPath="$PROJECT_DIR$/build/debug/CMakeFiles/TargetDirectories.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/debug/CMakeFiles/clion-Debug-log.txt" beforeDir="false" afterPath="$PROJECT_DIR$/build/debug/CMakeFiles/clion-Debug-log.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/debug/CMakeFiles/clion-environment.txt" beforeDir="false" afterPath="$PROJECT_DIR$/build/debug/CMakeFiles/clion-environment.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/debug/CMakeFiles/rules.ninja" beforeDir="false" afterPath="$PROJECT_DIR$/build/debug/CMakeFiles/rules.ninja" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/debug/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/build/debug/Testing/Temporary/LastTest.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/debug/build.ninja" beforeDir="false" afterPath="$PROJECT_DIR$/build/debug/build.ninja" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/debug/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/build/debug/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/release/.ninja_deps" beforeDir="false" afterPath="$PROJECT_DIR$/build/release/.ninja_deps" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/release/.ninja_log" beforeDir="false" afterPath="$PROJECT_DIR$/build/release/.ninja_log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/release/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/build/release/CMakeCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/release/CMakeFiles/3.25.2/CMakeDetermineCompilerABI_C.bin" beforeDir="false" afterPath="$PROJECT_DIR$/build/release/CMakeFiles/3.25.2/CMakeDetermineCompilerABI_C.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/release/CMakeFiles/3.25.2/CMakeDetermineCompilerABI_CXX.bin" beforeDir="false" afterPath="$PROJECT_DIR$/build/release/CMakeFiles/3.25.2/CMakeDetermineCompilerABI_CXX.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/release/CMakeFiles/3.25.2/CMakeSystem.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/build/release/CMakeFiles/3.25.2/CMakeSystem.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/release/CMakeFiles/CMakeOutput.log" beforeDir="false" afterPath="$PROJECT_DIR$/build/release/CMakeFiles/CMakeOutput.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/release/CMakeFiles/TargetDirectories.txt" beforeDir="false" afterPath="$PROJECT_DIR$/build/release/CMakeFiles/TargetDirectories.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/release/CMakeFiles/clion-Release-log.txt" beforeDir="false" afterPath="$PROJECT_DIR$/build/release/CMakeFiles/clion-Release-log.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/release/CMakeFiles/clion-environment.txt" beforeDir="false" afterPath="$PROJECT_DIR$/build/release/CMakeFiles/clion-environment.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/release/CMakeFiles/rules.ninja" beforeDir="false" afterPath="$PROJECT_DIR$/build/release/CMakeFiles/rules.ninja" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/release/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/build/release/Testing/Temporary/LastTest.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/release/build.ninja" beforeDir="false" afterPath="$PROJECT_DIR$/build/release/build.ninja" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/release/cmake_install.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/build/release/cmake_install.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/include/Engine.h" beforeDir="false" afterPath="$PROJECT_DIR$/include/Engine.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/include/io/Filesystem.h" beforeDir="false" afterPath="$PROJECT_DIR$/include/io/Filesystem.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/include/network/LEB128.h" beforeDir="false" afterPath="$PROJECT_DIR$/include/network/LEB128.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/HUD.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/HUD.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Window.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Window.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/io/Filesystem.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/io/Filesystem.cpp" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Release" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2023" />
    <option name="minorVersion" value="1.3" />
  </component>
  <component name="ProjectId" id="2QAJ4yKD2cPydq2boIRfVFGzCGk" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.cidr.known.project.marker": "true",
    "WebServerToolWindowFactoryState": "false",
    "cf.first.check.clang-format": "false",
    "cidr.known.project.marker": "true",
    "git-widget-placeholder": "main",
    "ignore.virus.scanning.warn.message": "true",
    "last_opened_file_path": "C:/workspace/ShooterGame",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "settings.editor.selected.configurable": "CMakeSettings",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager">
    <configuration name="Unnamed" type="CMakeRunConfiguration" factoryName="Application" nameIsGenerated="true" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="engine" TARGET_NAME="engine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="35497021-a1db-4a24-ac6e-73fced32eb24" name="Changes" comment="" />
      <created>1684790265538</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1684790265538</updated>
      <workItem from="1684790268758" duration="1275000" />
      <workItem from="1684791578987" duration="2521000" />
      <workItem from="1684840326362" duration="1531000" />
      <workItem from="1684854460263" duration="3005000" />
      <workItem from="1684869151960" duration="600000" />
      <workItem from="1684869886604" duration="259000" />
      <workItem from="1685567696582" duration="1639000" />
      <workItem from="1685623654531" duration="2036000" />
      <workItem from="1685635499535" duration="1024000" />
      <workItem from="1685661890172" duration="114000" />
      <workItem from="1685732893227" duration="735000" />
      <workItem from="1685827880343" duration="28000" />
      <workItem from="1685877968083" duration="62000" />
      <workItem from="1685888886623" duration="2376000" />
      <workItem from="1685896437635" duration="145000" />
      <workItem from="1686031679222" duration="4000" />
      <workItem from="1686032455834" duration="607000" />
      <workItem from="1686505331680" duration="1704000" />
      <workItem from="1686589000605" duration="659000" />
      <workItem from="1686826723511" duration="5894000" />
      <workItem from="1686840130886" duration="977000" />
      <workItem from="1686841198228" duration="1636000" />
      <workItem from="1686862011263" duration="1108000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VCPKGProject">
    <isAutomaticEditVcpkgJson value="false" />
    <isAutomaticCheckingOnLaunch value="false" />
    <isAutomaticFoundErrors value="true" />
    <isAutomaticFoundErrors value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
</project>